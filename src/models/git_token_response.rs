/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GitTokenResponse {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "type")]
    pub r#type: models::GitProviderEnum,
    #[serde(rename = "expired_at", skip_serializing_if = "Option::is_none")]
    pub expired_at: Option<String>,
    /// Mandatory only for BITBUCKET git provider
    #[serde(rename = "workspace", skip_serializing_if = "Option::is_none")]
    pub workspace: Option<String>,
    /// The number of services using this git token
    #[serde(rename = "associated_services_count")]
    pub associated_services_count: f64,
}

impl GitTokenResponse {
    pub fn new(id: uuid::Uuid, created_at: String, name: String, r#type: models::GitProviderEnum, associated_services_count: f64) -> GitTokenResponse {
        GitTokenResponse {
            id,
            created_at,
            updated_at: None,
            name,
            description: None,
            r#type,
            expired_at: None,
            workspace: None,
            associated_services_count,
        }
    }
}

