/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClusterInstanceGpuInfo {
    /// The number of GPUs included in the instance.
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    /// The model name of the GPU.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The manufacturer of the GPUs in the instance.
    #[serde(rename = "manufacturer", skip_serializing_if = "Option::is_none")]
    pub manufacturer: Option<String>,
    /// The total GPU memory available.
    #[serde(rename = "memory_in_mib", skip_serializing_if = "Option::is_none")]
    pub memory_in_mib: Option<String>,
}

impl ClusterInstanceGpuInfo {
    pub fn new() -> ClusterInstanceGpuInfo {
        ClusterInstanceGpuInfo {
            count: None,
            name: None,
            manufacturer: None,
            memory_in_mib: None,
        }
    }
}
