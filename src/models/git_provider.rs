/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GitProvider : Git provider information
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GitProvider {
    /// The type of git provider
    #[serde(rename = "kind")]
    pub kind: Kind,
    /// Custom git provider URL (for self-hosted instances)
    #[serde(
        rename = "url",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub url: Option<Option<String>>,
}

impl GitProvider {
    /// Git provider information
    pub fn new(kind: Kind) -> GitProvider {
        GitProvider { kind, url: None }
    }
}
/// The type of git provider
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Kind {
    #[serde(rename = "GITHUB")]
    Github,
    #[serde(rename = "GITLAB")]
    Gitlab,
    #[serde(rename = "BITBUCKET")]
    Bitbucket,
}

impl Default for Kind {
    fn default() -> Kind {
        Self::Github
    }
}
