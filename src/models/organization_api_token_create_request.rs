/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrganizationApiTokenCreateRequest {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(
        rename = "scope",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub scope: Option<Option<models::OrganizationApiTokenScope>>,
    /// the roleId provided by the \"List organization custom roles\" endpoint.
    #[serde(rename = "role_id", deserialize_with = "Option::deserialize")]
    pub role_id: Option<uuid::Uuid>,
}

impl OrganizationApiTokenCreateRequest {
    pub fn new(name: String, role_id: Option<uuid::Uuid>) -> OrganizationApiTokenCreateRequest {
        OrganizationApiTokenCreateRequest {
            name,
            description: None,
            scope: None,
            role_id,
        }
    }
}
