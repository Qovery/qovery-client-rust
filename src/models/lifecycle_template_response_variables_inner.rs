/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LifecycleTemplateResponseVariablesInner {
    #[serde(rename = "name")]
    pub name: String,
    /// Short description to explain the purpose of the variable
    #[serde(rename = "description")]
    pub description: String,
    /// Default value for the variable
    #[serde(rename = "default")]
    pub default: String,
    /// If the variable should be injected as a secret
    #[serde(rename = "is_secret")]
    pub is_secret: bool,
    #[serde(rename = "file", skip_serializing_if = "Option::is_none")]
    pub file: Option<models::LifecycleTemplateResponseVariablesInnerFile>,
}

impl LifecycleTemplateResponseVariablesInner {
    pub fn new(
        name: String,
        description: String,
        default: String,
        is_secret: bool,
    ) -> LifecycleTemplateResponseVariablesInner {
        LifecycleTemplateResponseVariablesInner {
            name,
            description,
            default,
            is_secret,
            file: None,
        }
    }
}
