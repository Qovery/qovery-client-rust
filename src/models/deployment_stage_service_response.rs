/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeploymentStageServiceResponse {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    /// id of the service attached to the stage
    #[serde(rename = "service_id", skip_serializing_if = "Option::is_none")]
    pub service_id: Option<uuid::Uuid>,
    /// type of the service (i.e APPLICATION, JOB, DATABASE, ...)
    #[serde(rename = "service_type", skip_serializing_if = "Option::is_none")]
    pub service_type: Option<String>,
}

impl DeploymentStageServiceResponse {
    pub fn new(id: uuid::Uuid, created_at: String) -> DeploymentStageServiceResponse {
        DeploymentStageServiceResponse {
            id,
            created_at,
            updated_at: None,
            service_id: None,
            service_type: None,
        }
    }
}

