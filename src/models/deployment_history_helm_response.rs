/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeploymentHistoryHelmResponse {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    /// name of the helm
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<models::StateEnum>,
    #[serde(
        rename = "commit",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub commit: Option<Option<models::Commit>>,
    #[serde(
        rename = "repository",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub repository: Option<Option<models::DeploymentHistoryHelmResponseAllOfRepository>>,
}

impl DeploymentHistoryHelmResponse {
    pub fn new(id: uuid::Uuid, created_at: String) -> DeploymentHistoryHelmResponse {
        DeploymentHistoryHelmResponse {
            id,
            created_at,
            updated_at: None,
            name: None,
            status: None,
            commit: None,
            repository: None,
        }
    }
}
