/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SlackAlertReceiverCreationRequest {
    #[serde(rename = "organization_id")]
    pub organization_id: uuid::Uuid,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "type")]
    pub r#type: models::AlertReceiverType,
    #[serde(rename = "send_resolved")]
    pub send_resolved: bool,
    #[serde(rename = "webhook_url")]
    pub webhook_url: String,
}

impl SlackAlertReceiverCreationRequest {
    pub fn new(
        organization_id: uuid::Uuid,
        name: String,
        description: String,
        r#type: models::AlertReceiverType,
        send_resolved: bool,
        webhook_url: String,
    ) -> SlackAlertReceiverCreationRequest {
        SlackAlertReceiverCreationRequest {
            organization_id,
            name,
            description,
            r#type,
            send_resolved,
            webhook_url,
        }
    }
}
