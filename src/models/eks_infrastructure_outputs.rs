/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EksInfrastructureOutputs {
    #[serde(rename = "kind")]
    pub kind: Kind,
    #[serde(rename = "cluster_name")]
    pub cluster_name: String,
    #[serde(rename = "cluster_arn")]
    pub cluster_arn: String,
    #[serde(rename = "cluster_oidc_issuer")]
    pub cluster_oidc_issuer: String,
    #[serde(rename = "vpc_id")]
    pub vpc_id: String,
}

impl EksInfrastructureOutputs {
    pub fn new(
        kind: Kind,
        cluster_name: String,
        cluster_arn: String,
        cluster_oidc_issuer: String,
        vpc_id: String,
    ) -> EksInfrastructureOutputs {
        EksInfrastructureOutputs {
            kind,
            cluster_name,
            cluster_arn,
            cluster_oidc_issuer,
            vpc_id,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Kind {
    #[serde(rename = "EKS")]
    Eks,
}

impl Default for Kind {
    fn default() -> Kind {
        Self::Eks
    }
}
