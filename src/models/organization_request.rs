/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrganizationRequest {
    /// name is case insensitive
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "plan")]
    pub plan: models::PlanEnum,
    #[serde(rename = "website_url", skip_serializing_if = "Option::is_none")]
    pub website_url: Option<String>,
    #[serde(rename = "repository", skip_serializing_if = "Option::is_none")]
    pub repository: Option<String>,
    #[serde(rename = "logo_url", skip_serializing_if = "Option::is_none")]
    pub logo_url: Option<String>,
    #[serde(rename = "icon_url", skip_serializing_if = "Option::is_none")]
    pub icon_url: Option<String>,
    #[serde(rename = "admin_emails", skip_serializing_if = "Option::is_none")]
    pub admin_emails: Option<Vec<String>>,
}

impl OrganizationRequest {
    pub fn new(name: String, plan: models::PlanEnum) -> OrganizationRequest {
        OrganizationRequest {
            name,
            description: None,
            plan,
            website_url: None,
            repository: None,
            logo_url: None,
            icon_url: None,
            admin_emails: None,
        }
    }
}
