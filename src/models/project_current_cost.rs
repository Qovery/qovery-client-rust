/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProjectCurrentCost {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "consumed_time_in_seconds")]
    pub consumed_time_in_seconds: i32,
    #[serde(rename = "cost")]
    pub cost: models::Cost,
    #[serde(rename = "environments", skip_serializing_if = "Option::is_none")]
    pub environments: Option<Vec<models::GenericObjectCurrentCost>>,
}

impl ProjectCurrentCost {
    pub fn new(
        id: uuid::Uuid,
        name: String,
        consumed_time_in_seconds: i32,
        cost: models::Cost,
    ) -> ProjectCurrentCost {
        ProjectCurrentCost {
            id,
            name,
            consumed_time_in_seconds,
            cost,
            environments: None,
        }
    }
}
