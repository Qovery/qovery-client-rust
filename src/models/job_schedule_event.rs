/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// JobScheduleEvent : On which event the job is going to run.   ON_START means when a deployment is requested for the environment   ON_STOP means when a stop of the environment is requested   ON_DELETE means when an environment delete is requested   CRON means at a scheduled interval
/// On which event the job is going to run.   ON_START means when a deployment is requested for the environment   ON_STOP means when a stop of the environment is requested   ON_DELETE means when an environment delete is requested   CRON means at a scheduled interval
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum JobScheduleEvent {
    #[serde(rename = "ON_START")]
    OnStart,
    #[serde(rename = "ON_STOP")]
    OnStop,
    #[serde(rename = "ON_DELETE")]
    OnDelete,
    #[serde(rename = "CRON")]
    Cron,
}

impl std::fmt::Display for JobScheduleEvent {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::OnStart => write!(f, "ON_START"),
            Self::OnStop => write!(f, "ON_STOP"),
            Self::OnDelete => write!(f, "ON_DELETE"),
            Self::Cron => write!(f, "CRON"),
        }
    }
}

impl Default for JobScheduleEvent {
    fn default() -> JobScheduleEvent {
        Self::OnStart
    }
}
