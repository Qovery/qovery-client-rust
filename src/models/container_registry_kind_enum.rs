/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ContainerRegistryKindEnum : The type of your container registry
/// The type of your container registry
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContainerRegistryKindEnum {
    #[serde(rename = "ECR")]
    Ecr,
    #[serde(rename = "SCALEWAY_CR")]
    ScalewayCr,
    #[serde(rename = "DOCKER_HUB")]
    DockerHub,
    #[serde(rename = "GITHUB_CR")]
    GithubCr,
    #[serde(rename = "GITLAB_CR")]
    GitlabCr,
    #[serde(rename = "PUBLIC_ECR")]
    PublicEcr,
    #[serde(rename = "DOCR")]
    Docr,
    #[serde(rename = "GENERIC_CR")]
    GenericCr,
    #[serde(rename = "GCP_ARTIFACT_REGISTRY")]
    GcpArtifactRegistry,
    #[serde(rename = "AZURE_CR")]
    AzureCr,
}

impl std::fmt::Display for ContainerRegistryKindEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Ecr => write!(f, "ECR"),
            Self::ScalewayCr => write!(f, "SCALEWAY_CR"),
            Self::DockerHub => write!(f, "DOCKER_HUB"),
            Self::GithubCr => write!(f, "GITHUB_CR"),
            Self::GitlabCr => write!(f, "GITLAB_CR"),
            Self::PublicEcr => write!(f, "PUBLIC_ECR"),
            Self::Docr => write!(f, "DOCR"),
            Self::GenericCr => write!(f, "GENERIC_CR"),
            Self::GcpArtifactRegistry => write!(f, "GCP_ARTIFACT_REGISTRY"),
            Self::AzureCr => write!(f, "AZURE_CR"),
        }
    }
}

impl Default for ContainerRegistryKindEnum {
    fn default() -> ContainerRegistryKindEnum {
        Self::Ecr
    }
}
