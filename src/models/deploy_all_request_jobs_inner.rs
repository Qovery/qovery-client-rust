/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeployAllRequestJobsInner {
    /// id of the job to be updated.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<uuid::Uuid>,
    /// new tag for the job image. Use only if job is an image source. Can be empty only if the service has been already deployed (in this case the service version won't be changed)
    #[serde(rename = "image_tag", skip_serializing_if = "Option::is_none")]
    pub image_tag: Option<String>,
    /// Commit ID to deploy. Use only if job is a repository source. Can be empty only if the service has been already deployed (in this case the service version won't be changed)
    #[serde(rename = "git_commit_id", skip_serializing_if = "Option::is_none")]
    pub git_commit_id: Option<String>,
}

impl DeployAllRequestJobsInner {
    pub fn new() -> DeployAllRequestJobsInner {
        DeployAllRequestJobsInner {
            id: None,
            image_tag: None,
            git_commit_id: None,
        }
    }
}
