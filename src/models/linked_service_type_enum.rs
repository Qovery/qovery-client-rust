/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LinkedServiceTypeEnum : type of the service (application, database, job, gateway...)
/// type of the service (application, database, job, gateway...)
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LinkedServiceTypeEnum {
    #[serde(rename = "APPLICATION")]
    Application,
    #[serde(rename = "CONTAINER")]
    Container,
    #[serde(rename = "DATABASE")]
    Database,
    #[serde(rename = "JOB")]
    Job,
    #[serde(rename = "HELM")]
    Helm,

}

impl std::fmt::Display for LinkedServiceTypeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Application => write!(f, "APPLICATION"),
            Self::Container => write!(f, "CONTAINER"),
            Self::Database => write!(f, "DATABASE"),
            Self::Job => write!(f, "JOB"),
            Self::Helm => write!(f, "HELM"),
        }
    }
}

impl Default for LinkedServiceTypeEnum {
    fn default() -> LinkedServiceTypeEnum {
        Self::Application
    }
}

