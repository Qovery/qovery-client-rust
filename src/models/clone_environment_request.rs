/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CloneEnvironmentRequest {
    /// name is case insensitive
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "cluster_id", skip_serializing_if = "Option::is_none")]
    pub cluster_id: Option<uuid::Uuid>,
    #[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<models::EnvironmentModeEnum>,
    #[serde(
        rename = "apply_deployment_rule",
        skip_serializing_if = "Option::is_none"
    )]
    pub apply_deployment_rule: Option<bool>,
    #[serde(rename = "project_id", skip_serializing_if = "Option::is_none")]
    pub project_id: Option<uuid::Uuid>,
}

impl CloneEnvironmentRequest {
    pub fn new(name: String) -> CloneEnvironmentRequest {
        CloneEnvironmentRequest {
            name,
            cluster_id: None,
            mode: None,
            apply_deployment_rule: None,
            project_id: None,
        }
    }
}
