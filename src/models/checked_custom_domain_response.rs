/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CheckedCustomDomainResponse {
    /// domain name checked
    #[serde(rename = "domain_name")]
    pub domain_name: String,
    #[serde(rename = "status")]
    pub status: models::CheckedCustomDomainStatus,
    /// optional field containing information about failure check
    #[serde(rename = "error_details", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub error_details: Option<Option<String>>,
}

impl CheckedCustomDomainResponse {
    pub fn new(domain_name: String, status: models::CheckedCustomDomainStatus) -> CheckedCustomDomainResponse {
        CheckedCustomDomainResponse {
            domain_name,
            status,
            error_details: None,
        }
    }
}

