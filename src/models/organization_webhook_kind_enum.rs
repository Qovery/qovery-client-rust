/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrganizationWebhookKindEnum : Define the type of the webhook. `SLACK` is a special webhook type to push notifications directly to slack. The `target_url` must be a Slack compatible endpoint.
/// Define the type of the webhook. `SLACK` is a special webhook type to push notifications directly to slack. The `target_url` must be a Slack compatible endpoint.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OrganizationWebhookKindEnum {
    #[serde(rename = "STANDARD")]
    Standard,
    #[serde(rename = "SLACK")]
    Slack,
}

impl std::fmt::Display for OrganizationWebhookKindEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Standard => write!(f, "STANDARD"),
            Self::Slack => write!(f, "SLACK"),
        }
    }
}

impl Default for OrganizationWebhookKindEnum {
    fn default() -> OrganizationWebhookKindEnum {
        Self::Standard
    }
}
