/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CloudProviderEnum {
    #[serde(rename = "AWS")]
    Aws,
    #[serde(rename = "SCW")]
    Scw,
    #[serde(rename = "GCP")]
    Gcp,
    #[serde(rename = "ON_PREMISE")]
    OnPremise,
    #[serde(rename = "AZURE")]
    Azure,

}

impl std::fmt::Display for CloudProviderEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Aws => write!(f, "AWS"),
            Self::Scw => write!(f, "SCW"),
            Self::Gcp => write!(f, "GCP"),
            Self::OnPremise => write!(f, "ON_PREMISE"),
            Self::Azure => write!(f, "AZURE"),
        }
    }
}

impl Default for CloudProviderEnum {
    fn default() -> CloudProviderEnum {
        Self::Aws
    }
}

