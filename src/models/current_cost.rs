/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CurrentCost {
    #[serde(rename = "plan", skip_serializing_if = "Option::is_none")]
    pub plan: Option<models::PlanEnum>,
    /// number of days remaining before the end of the trial period
    #[serde(
        rename = "remaining_trial_day",
        skip_serializing_if = "Option::is_none"
    )]
    pub remaining_trial_day: Option<i32>,
    /// date when the current plan will be renewed
    #[serde(rename = "renewal_at", skip_serializing_if = "Option::is_none")]
    pub renewal_at: Option<String>,
    #[serde(rename = "cost", skip_serializing_if = "Option::is_none")]
    pub cost: Option<models::Cost>,
}

impl CurrentCost {
    pub fn new() -> CurrentCost {
        CurrentCost {
            plan: None,
            remaining_trial_day: None,
            renewal_at: None,
            cost: None,
        }
    }
}
