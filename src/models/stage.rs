/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Stage {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// stage name
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "steps", skip_serializing_if = "Option::is_none")]
    pub steps: Option<models::StageStepMetrics>,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<models::StageStatusEnum>,
}

impl Stage {
    pub fn new(id: uuid::Uuid, name: String, description: String) -> Stage {
        Stage {
            id,
            name,
            steps: None,
            description,
            status: None,
        }
    }
}
