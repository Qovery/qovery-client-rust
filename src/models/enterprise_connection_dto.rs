/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnterpriseConnectionDto {
    /// The connection name
    #[serde(rename = "connection_name")]
    pub connection_name: String,
    /// The purpose of this default role is to be associated to your users if: - you choose to not expose your IDPs groups to the SAML / OIDC connection - no associated group is found in your `group_mappings` defined  You can define either a Qovery provided role (i.e `viewer`) or one of your custom role`s uuid.
    #[serde(rename = "default_role")]
    pub default_role: String,
    /// * if `true`, roles will be synchronized at each user login according to your `group_mappings` configuration based on your IDP groups * if `false`, no synchronization is done for your users and `group_mappings` configuration will be ignored
    #[serde(rename = "enforce_group_sync")]
    pub enforce_group_sync: bool,
    /// This will allow to create mapping rules based on your IDP group names.   It's a dictionnary having: - key: either a Qovery provided role (i.e `viewer`) or one of your custom role`s uuid - value: an array of your IDP group names  Example: \"I want to associate the Qovery role `devops` to my IDP groups ['Administrators', 'DevSecOps']\"
    #[serde(rename = "group_mappings")]
    pub group_mappings: std::collections::HashMap<String, Vec<String>>,
}

impl EnterpriseConnectionDto {
    pub fn new(
        connection_name: String,
        default_role: String,
        enforce_group_sync: bool,
        group_mappings: std::collections::HashMap<String, Vec<String>>,
    ) -> EnterpriseConnectionDto {
        EnterpriseConnectionDto {
            connection_name,
            default_role,
            enforce_group_sync,
            group_mappings,
        }
    }
}
