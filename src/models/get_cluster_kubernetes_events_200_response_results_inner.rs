/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetClusterKubernetesEvents200ResponseResultsInner {
    /// The created date following ISO-8601 format
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// The source kubernetes object related to the Event
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    /// The namespace of the kubernetes object related to the Event (optional)
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    /// The name of the Event
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The action that triggered the Event
    #[serde(rename = "reason", skip_serializing_if = "Option::is_none")]
    pub reason: Option<String>,
    /// A description of the Event
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    /// As of today it can be either Warning or Normal (can evolve in the next releases)
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
}

impl GetClusterKubernetesEvents200ResponseResultsInner {
    pub fn new() -> GetClusterKubernetesEvents200ResponseResultsInner {
        GetClusterKubernetesEvents200ResponseResultsInner {
            created_at: None,
            kind: None,
            namespace: None,
            name: None,
            reason: None,
            message: None,
            r#type: None,
        }
    }
}

