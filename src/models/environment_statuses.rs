/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnvironmentStatuses {
    #[serde(rename = "environment")]
    pub environment: models::EnvironmentStatus,
    #[serde(rename = "applications")]
    pub applications: Vec<models::Status>,
    #[serde(rename = "containers")]
    pub containers: Vec<models::Status>,
    #[serde(rename = "jobs")]
    pub jobs: Vec<models::Status>,
    #[serde(rename = "databases")]
    pub databases: Vec<models::Status>,
    #[serde(rename = "helms")]
    pub helms: Vec<models::Status>,
    #[serde(rename = "terraforms")]
    pub terraforms: Vec<models::Status>,
}

impl EnvironmentStatuses {
    pub fn new(
        environment: models::EnvironmentStatus,
        applications: Vec<models::Status>,
        containers: Vec<models::Status>,
        jobs: Vec<models::Status>,
        databases: Vec<models::Status>,
        helms: Vec<models::Status>,
        terraforms: Vec<models::Status>,
    ) -> EnvironmentStatuses {
        EnvironmentStatuses {
            environment,
            applications,
            containers,
            jobs,
            databases,
            helms,
            terraforms,
        }
    }
}
