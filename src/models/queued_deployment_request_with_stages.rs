/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QueuedDeploymentRequestWithStages {
    #[serde(rename = "identifier")]
    pub identifier: models::QueuedDeploymentRequestWithStagesIdentifier,
    #[serde(rename = "auditing_data")]
    pub auditing_data: models::QueuedDeploymentRequestWithStagesAuditingData,
    #[serde(rename = "trigger_action")]
    pub trigger_action: models::DeploymentHistoryTriggerAction,
    #[serde(rename = "stages")]
    pub stages: Vec<models::QueuedDeploymentRequestWithStagesStagesInner>,
}

impl QueuedDeploymentRequestWithStages {
    pub fn new(
        identifier: models::QueuedDeploymentRequestWithStagesIdentifier,
        auditing_data: models::QueuedDeploymentRequestWithStagesAuditingData,
        trigger_action: models::DeploymentHistoryTriggerAction,
        stages: Vec<models::QueuedDeploymentRequestWithStagesStagesInner>,
    ) -> QueuedDeploymentRequestWithStages {
        QueuedDeploymentRequestWithStages {
            identifier,
            auditing_data,
            trigger_action,
            stages,
        }
    }
}
