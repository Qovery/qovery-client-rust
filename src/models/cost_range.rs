/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CostRange {
    #[serde(rename = "min_cost_in_cents", skip_serializing_if = "Option::is_none")]
    pub min_cost_in_cents: Option<i32>,
    #[serde(rename = "min_cost", skip_serializing_if = "Option::is_none")]
    pub min_cost: Option<f64>,
    #[serde(rename = "max_cost_in_cents", skip_serializing_if = "Option::is_none")]
    pub max_cost_in_cents: Option<i32>,
    #[serde(rename = "max_cost", skip_serializing_if = "Option::is_none")]
    pub max_cost: Option<f64>,
    #[serde(rename = "currency_code")]
    pub currency_code: String,
}

impl CostRange {
    pub fn new(currency_code: String) -> CostRange {
        CostRange {
            min_cost_in_cents: None,
            min_cost: None,
            max_cost_in_cents: None,
            max_cost: None,
            currency_code,
        }
    }
}

