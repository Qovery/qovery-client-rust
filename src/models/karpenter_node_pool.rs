/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// KarpenterNodePool : 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct KarpenterNodePool {
    #[serde(rename = "requirements")]
    pub requirements: Vec<models::KarpenterNodePoolRequirement>,
    #[serde(rename = "stable_override", skip_serializing_if = "Option::is_none")]
    pub stable_override: Option<Box<models::KarpenterStableNodePoolOverride>>,
    #[serde(rename = "default_override", skip_serializing_if = "Option::is_none")]
    pub default_override: Option<Box<models::KarpenterDefaultNodePoolOverride>>,
}

impl KarpenterNodePool {
    /// 
    pub fn new(requirements: Vec<models::KarpenterNodePoolRequirement>) -> KarpenterNodePool {
        KarpenterNodePool {
            requirements,
            stable_override: None,
            default_override: None,
        }
    }
}

