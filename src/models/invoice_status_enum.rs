/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InvoiceStatusEnum {
    #[serde(rename = "NOT_PAID")]
    NotPaid,
    #[serde(rename = "PAID")]
    Paid,
    #[serde(rename = "PAYMENT_DUE")]
    PaymentDue,
    #[serde(rename = "PENDING")]
    Pending,
    #[serde(rename = "POSTED")]
    Posted,
    #[serde(rename = "UNKNOWN")]
    Unknown,
    #[serde(rename = "VOIDED")]
    Voided,
}

impl std::fmt::Display for InvoiceStatusEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::NotPaid => write!(f, "NOT_PAID"),
            Self::Paid => write!(f, "PAID"),
            Self::PaymentDue => write!(f, "PAYMENT_DUE"),
            Self::Pending => write!(f, "PENDING"),
            Self::Posted => write!(f, "POSTED"),
            Self::Unknown => write!(f, "UNKNOWN"),
            Self::Voided => write!(f, "VOIDED"),
        }
    }
}

impl Default for InvoiceStatusEnum {
    fn default() -> InvoiceStatusEnum {
        Self::NotPaid
    }
}
