/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SecretAlias {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "mount_path")]
    pub mount_path: String,
    #[serde(rename = "scope")]
    pub scope: models::ApiVariableScopeEnum,
    #[serde(rename = "variable_type")]
    pub variable_type: models::ApiVariableTypeEnum,
    /// optional variable description (255 characters maximum)
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "enable_interpolation_in_file", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub enable_interpolation_in_file: Option<Option<bool>>,
}

impl SecretAlias {
    pub fn new(id: uuid::Uuid, key: String, mount_path: String, scope: models::ApiVariableScopeEnum, variable_type: models::ApiVariableTypeEnum) -> SecretAlias {
        SecretAlias {
            id,
            key,
            mount_path,
            scope,
            variable_type,
            description: None,
            enable_interpolation_in_file: None,
        }
    }
}

