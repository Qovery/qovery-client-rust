/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct KarpenterNodePoolLimits {
    #[serde(rename = "enabled")]
    pub enabled: bool,
    /// CPU limit that will be applied for the node pool (in vCPU unit: 1 vCPU = 1000 millicores)
    #[serde(rename = "max_cpu_in_vcpu")]
    pub max_cpu_in_vcpu: i32,
    /// Memory limit that will be applied for the node pool (in Gibibytes unit: 1Gi = 1024 mebibytes)
    #[serde(rename = "max_memory_in_gibibytes")]
    pub max_memory_in_gibibytes: i32,
}

impl KarpenterNodePoolLimits {
    pub fn new(enabled: bool, max_cpu_in_vcpu: i32, max_memory_in_gibibytes: i32) -> KarpenterNodePoolLimits {
        KarpenterNodePoolLimits {
            enabled,
            max_cpu_in_vcpu,
            max_memory_in_gibibytes,
        }
    }
}

