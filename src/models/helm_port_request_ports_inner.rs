/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HelmPortRequestPortsInner {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The listening port of your service.
    #[serde(rename = "internal_port")]
    pub internal_port: i32,
    /// The exposed port for your service. This is optional. If not set a default port will be used.
    #[serde(rename = "external_port", skip_serializing_if = "Option::is_none")]
    pub external_port: Option<i32>,
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    #[serde(rename = "protocol", skip_serializing_if = "Option::is_none")]
    pub protocol: Option<models::HelmPortProtocolEnum>,
    /// is the default port to use for domain
    #[serde(rename = "is_default", skip_serializing_if = "Option::is_none")]
    pub is_default: Option<bool>,
    #[serde(rename = "service_selectors", skip_serializing_if = "Option::is_none")]
    pub service_selectors: Option<Vec<models::KubernetesSelector>>,
    #[serde(rename = "service_name", skip_serializing_if = "Option::is_none")]
    pub service_name: Option<String>,
}

impl HelmPortRequestPortsInner {
    pub fn new(internal_port: i32) -> HelmPortRequestPortsInner {
        HelmPortRequestPortsInner {
            name: None,
            internal_port,
            external_port: None,
            namespace: None,
            protocol: None,
            is_default: None,
            service_selectors: None,
            service_name: None,
        }
    }
}

