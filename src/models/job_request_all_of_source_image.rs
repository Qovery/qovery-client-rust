/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobRequestAllOfSourceImage {
    /// The image name pattern differs according to chosen container registry provider:   * `ECR`: `repository` * `SCALEWAY_CR`: `namespace/image` * `DOCKER_HUB`: `image` or `repository/image` * `PUBLIC_ECR`: `registry_alias/repository`
    #[serde(rename = "image_name", skip_serializing_if = "Option::is_none")]
    pub image_name: Option<String>,
    /// tag of the image container
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<String>,
    /// tag of the image container
    #[serde(rename = "registry_id", skip_serializing_if = "Option::is_none")]
    pub registry_id: Option<String>,
}

impl JobRequestAllOfSourceImage {
    pub fn new() -> JobRequestAllOfSourceImage {
        JobRequestAllOfSourceImage {
            image_name: None,
            tag: None,
            registry_id: None,
        }
    }
}
