/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClusterFeatureAwsExistingVpc {
    #[serde(rename = "aws_vpc_eks_id")]
    pub aws_vpc_eks_id: String,
    #[serde(rename = "eks_subnets_zone_a_ids")]
    pub eks_subnets_zone_a_ids: Vec<String>,
    #[serde(rename = "eks_subnets_zone_b_ids")]
    pub eks_subnets_zone_b_ids: Vec<String>,
    #[serde(rename = "eks_subnets_zone_c_ids")]
    pub eks_subnets_zone_c_ids: Vec<String>,
    #[serde(
        rename = "documentdb_subnets_zone_a_ids",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub documentdb_subnets_zone_a_ids: Option<Option<Vec<String>>>,
    #[serde(
        rename = "documentdb_subnets_zone_b_ids",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub documentdb_subnets_zone_b_ids: Option<Option<Vec<String>>>,
    #[serde(
        rename = "documentdb_subnets_zone_c_ids",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub documentdb_subnets_zone_c_ids: Option<Option<Vec<String>>>,
    #[serde(
        rename = "elasticache_subnets_zone_a_ids",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub elasticache_subnets_zone_a_ids: Option<Option<Vec<String>>>,
    #[serde(
        rename = "elasticache_subnets_zone_b_ids",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub elasticache_subnets_zone_b_ids: Option<Option<Vec<String>>>,
    #[serde(
        rename = "elasticache_subnets_zone_c_ids",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub elasticache_subnets_zone_c_ids: Option<Option<Vec<String>>>,
    #[serde(
        rename = "rds_subnets_zone_a_ids",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub rds_subnets_zone_a_ids: Option<Option<Vec<String>>>,
    #[serde(
        rename = "rds_subnets_zone_b_ids",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub rds_subnets_zone_b_ids: Option<Option<Vec<String>>>,
    #[serde(
        rename = "rds_subnets_zone_c_ids",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub rds_subnets_zone_c_ids: Option<Option<Vec<String>>>,
    #[serde(
        rename = "eks_karpenter_fargate_subnets_zone_a_ids",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub eks_karpenter_fargate_subnets_zone_a_ids: Option<Option<Vec<String>>>,
    #[serde(
        rename = "eks_karpenter_fargate_subnets_zone_b_ids",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub eks_karpenter_fargate_subnets_zone_b_ids: Option<Option<Vec<String>>>,
    #[serde(
        rename = "eks_karpenter_fargate_subnets_zone_c_ids",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub eks_karpenter_fargate_subnets_zone_c_ids: Option<Option<Vec<String>>>,
}

impl ClusterFeatureAwsExistingVpc {
    pub fn new(
        aws_vpc_eks_id: String,
        eks_subnets_zone_a_ids: Vec<String>,
        eks_subnets_zone_b_ids: Vec<String>,
        eks_subnets_zone_c_ids: Vec<String>,
    ) -> ClusterFeatureAwsExistingVpc {
        ClusterFeatureAwsExistingVpc {
            aws_vpc_eks_id,
            eks_subnets_zone_a_ids,
            eks_subnets_zone_b_ids,
            eks_subnets_zone_c_ids,
            documentdb_subnets_zone_a_ids: None,
            documentdb_subnets_zone_b_ids: None,
            documentdb_subnets_zone_c_ids: None,
            elasticache_subnets_zone_a_ids: None,
            elasticache_subnets_zone_b_ids: None,
            elasticache_subnets_zone_c_ids: None,
            rds_subnets_zone_a_ids: None,
            rds_subnets_zone_b_ids: None,
            rds_subnets_zone_c_ids: None,
            eks_karpenter_fargate_subnets_zone_a_ids: None,
            eks_karpenter_fargate_subnets_zone_b_ids: None,
            eks_karpenter_fargate_subnets_zone_c_ids: None,
        }
    }
}
