/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeploymentHistoryService {
    #[serde(rename = "identifier")]
    pub identifier: models::DeploymentHistoryServiceIdentifier,
    #[serde(rename = "status")]
    pub status: models::StateEnum,
    #[serde(rename = "auditing_data")]
    pub auditing_data: models::DeploymentHistoryAuditingData,
    #[serde(rename = "details")]
    pub details: models::DeploymentHistoryServiceDetails,
    #[serde(rename = "status_details")]
    pub status_details: models::StatusDetails,
    #[serde(rename = "icon_uri")]
    pub icon_uri: String,
    #[serde(rename = "total_duration", skip_serializing_if = "Option::is_none")]
    pub total_duration: Option<String>,
}

impl DeploymentHistoryService {
    pub fn new(
        identifier: models::DeploymentHistoryServiceIdentifier,
        status: models::StateEnum,
        auditing_data: models::DeploymentHistoryAuditingData,
        details: models::DeploymentHistoryServiceDetails,
        status_details: models::StatusDetails,
        icon_uri: String,
    ) -> DeploymentHistoryService {
        DeploymentHistoryService {
            identifier,
            status,
            auditing_data,
            details,
            status_details,
            icon_uri,
            total_duration: None,
        }
    }
}
