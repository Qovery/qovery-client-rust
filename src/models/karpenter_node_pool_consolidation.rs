/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct KarpenterNodePoolConsolidation {
    #[serde(rename = "enabled")]
    pub enabled: bool,
    #[serde(rename = "days")]
    pub days: Vec<models::WeekdayEnum>,
    /// The start date of the consolidation. The format should follow ISO-8601 convention: \"PThh:mm\"
    #[serde(rename = "start_time")]
    pub start_time: String,
    /// The duration during the consolidation will be active. The format should follow ISO-8601 convention: \"PThhHmmM\"
    #[serde(rename = "duration")]
    pub duration: String,
}

impl KarpenterNodePoolConsolidation {
    pub fn new(
        enabled: bool,
        days: Vec<models::WeekdayEnum>,
        start_time: String,
        duration: String,
    ) -> KarpenterNodePoolConsolidation {
        KarpenterNodePoolConsolidation {
            enabled,
            days,
            start_time,
            duration,
        }
    }
}
