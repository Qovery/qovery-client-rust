/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DatabaseTypeEnum {
    #[serde(rename = "MONGODB")]
    Mongodb,
    #[serde(rename = "MYSQL")]
    Mysql,
    #[serde(rename = "POSTGRESQL")]
    Postgresql,
    #[serde(rename = "REDIS")]
    Redis,
}

impl std::fmt::Display for DatabaseTypeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Mongodb => write!(f, "MONGODB"),
            Self::Mysql => write!(f, "MYSQL"),
            Self::Postgresql => write!(f, "POSTGRESQL"),
            Self::Redis => write!(f, "REDIS"),
        }
    }
}

impl Default for DatabaseTypeEnum {
    fn default() -> DatabaseTypeEnum {
        Self::Mongodb
    }
}
