/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Member {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "nickname", skip_serializing_if = "Option::is_none")]
    pub nickname: Option<String>,
    #[serde(rename = "email")]
    pub email: String,
    #[serde(
        rename = "profile_picture_url",
        skip_serializing_if = "Option::is_none"
    )]
    pub profile_picture_url: Option<String>,
    /// last time the user was connected
    #[serde(rename = "last_activity_at", skip_serializing_if = "Option::is_none")]
    pub last_activity_at: Option<String>,
    #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
    pub role: Option<models::InviteMemberRoleEnum>,
    /// the role linked to the user
    #[serde(rename = "role_name", skip_serializing_if = "Option::is_none")]
    pub role_name: Option<String>,
    #[serde(rename = "role_id", skip_serializing_if = "Option::is_none")]
    pub role_id: Option<uuid::Uuid>,
}

impl Member {
    pub fn new(id: uuid::Uuid, created_at: String, email: String) -> Member {
        Member {
            id,
            created_at,
            updated_at: None,
            name: None,
            nickname: None,
            email,
            profile_picture_url: None,
            last_activity_at: None,
            role: None,
            role_name: None,
            role_id: None,
        }
    }
}
