/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeploymentStageWithServicesStatuses {
    #[serde(rename = "applications", skip_serializing_if = "Option::is_none")]
    pub applications: Option<Vec<models::Status>>,
    #[serde(rename = "containers", skip_serializing_if = "Option::is_none")]
    pub containers: Option<Vec<models::Status>>,
    #[serde(rename = "jobs", skip_serializing_if = "Option::is_none")]
    pub jobs: Option<Vec<models::Status>>,
    #[serde(rename = "databases", skip_serializing_if = "Option::is_none")]
    pub databases: Option<Vec<models::Status>>,
    #[serde(rename = "helms", skip_serializing_if = "Option::is_none")]
    pub helms: Option<Vec<models::Status>>,
    #[serde(rename = "terraforms", skip_serializing_if = "Option::is_none")]
    pub terraforms: Option<Vec<models::Status>>,
    #[serde(rename = "stage", skip_serializing_if = "Option::is_none")]
    pub stage: Option<models::Stage>,
}

impl DeploymentStageWithServicesStatuses {
    pub fn new() -> DeploymentStageWithServicesStatuses {
        DeploymentStageWithServicesStatuses {
            applications: None,
            containers: None,
            jobs: None,
            databases: None,
            helms: None,
            terraforms: None,
            stage: None,
        }
    }
}
