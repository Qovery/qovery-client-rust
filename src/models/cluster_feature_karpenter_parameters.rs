/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClusterFeatureKarpenterParameters {
    #[serde(rename = "spot_enabled")]
    pub spot_enabled: bool,
    #[serde(rename = "disk_size_in_gib")]
    pub disk_size_in_gib: i32,
    #[serde(rename = "default_service_architecture")]
    pub default_service_architecture: models::CpuArchitectureEnum,
    #[serde(rename = "qovery_node_pools")]
    pub qovery_node_pools: Box<models::KarpenterNodePool>,
}

impl ClusterFeatureKarpenterParameters {
    pub fn new(spot_enabled: bool, disk_size_in_gib: i32, default_service_architecture: models::CpuArchitectureEnum, qovery_node_pools: models::KarpenterNodePool) -> ClusterFeatureKarpenterParameters {
        ClusterFeatureKarpenterParameters {
            spot_enabled,
            disk_size_in_gib,
            default_service_architecture,
            qovery_node_pools: Box::new(qovery_node_pools),
        }
    }
}

