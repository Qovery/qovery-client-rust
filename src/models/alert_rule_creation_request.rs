/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AlertRuleCreationRequest {
    /// Organization identifier
    #[serde(rename = "organization_id")]
    pub organization_id: uuid::Uuid,
    ///  Cluster identifier where the rule will be deployed
    #[serde(rename = "cluster_id")]
    pub cluster_id: uuid::Uuid,
    /// Name of the alert rule
    #[serde(rename = "name")]
    pub name: String,
    /// Description of what the alert monitors
    #[serde(rename = "description")]
    pub description: String,
    /// PromQL expression to evaluate
    #[serde(rename = "promql_expr")]
    pub promql_expr: String,
    /// Duration the condition must be true before firing (ISO-8601 duration format)
    #[serde(rename = "for_duration")]
    pub for_duration: String,
    #[serde(rename = "severity")]
    pub severity: models::AlertSeverity,
    /// Whether the alert rule is enabled
    #[serde(rename = "enabled")]
    pub enabled: bool,
    /// List of alert receiver IDs to send notifications to
    #[serde(rename = "alert_receiver_ids")]
    pub alert_receiver_ids: Vec<uuid::Uuid>,
    #[serde(rename = "presentation")]
    pub presentation: models::AlertPresentation,
}

impl AlertRuleCreationRequest {
    pub fn new(
        organization_id: uuid::Uuid,
        cluster_id: uuid::Uuid,
        name: String,
        description: String,
        promql_expr: String,
        for_duration: String,
        severity: models::AlertSeverity,
        enabled: bool,
        alert_receiver_ids: Vec<uuid::Uuid>,
        presentation: models::AlertPresentation,
    ) -> AlertRuleCreationRequest {
        AlertRuleCreationRequest {
            organization_id,
            cluster_id,
            name,
            description,
            promql_expr,
            for_duration,
            severity,
            enabled,
            alert_receiver_ids,
            presentation,
        }
    }
}
