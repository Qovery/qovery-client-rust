/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CheckedCustomDomainStatus : This enum represents the final status for your domain. There are 2 successful statuses:   * `RESOLVES_TO_IP`: we succeeded to resolve an IP to your domain. This is the successful final status for custom domains where `use_cdn` is `true`   * `MATCHES_LOAD_BALANCER_HOST`: we succeeded to lookup CNAMEs & found that it matches your cluser Load Balancer host. This is the successful final status for custom domain where `use_cdn` is `false`   * `DOMAIN_NOT_CONFIGURED`: the domain is not configured, look at the `error_details` field for more information    * `DOMAIN_LINKED_TO_WRONG_HOST`: the domain has CNAME(s) that matches a different host than your Load Balancer one   * `GENERIC_FAILURE`: an error occured when attempting to validate your domain, look at the `error_details` field for more information 
/// This enum represents the final status for your domain. There are 2 successful statuses:   * `RESOLVES_TO_IP`: we succeeded to resolve an IP to your domain. This is the successful final status for custom domains where `use_cdn` is `true`   * `MATCHES_LOAD_BALANCER_HOST`: we succeeded to lookup CNAMEs & found that it matches your cluser Load Balancer host. This is the successful final status for custom domain where `use_cdn` is `false`   * `DOMAIN_NOT_CONFIGURED`: the domain is not configured, look at the `error_details` field for more information    * `DOMAIN_LINKED_TO_WRONG_HOST`: the domain has CNAME(s) that matches a different host than your Load Balancer one   * `GENERIC_FAILURE`: an error occured when attempting to validate your domain, look at the `error_details` field for more information 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CheckedCustomDomainStatus {
    #[serde(rename = "RESOLVES_TO_IP")]
    ResolvesToIp,
    #[serde(rename = "MATCHES_LOAD_BALANCER_HOST")]
    MatchesLoadBalancerHost,
    #[serde(rename = "DOMAIN_NOT_CONFIGURED")]
    DomainNotConfigured,
    #[serde(rename = "DOMAIN_LINKED_TO_WRONG_HOST")]
    DomainLinkedToWrongHost,
    #[serde(rename = "GENERIC_FAILURE")]
    GenericFailure,

}

impl std::fmt::Display for CheckedCustomDomainStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ResolvesToIp => write!(f, "RESOLVES_TO_IP"),
            Self::MatchesLoadBalancerHost => write!(f, "MATCHES_LOAD_BALANCER_HOST"),
            Self::DomainNotConfigured => write!(f, "DOMAIN_NOT_CONFIGURED"),
            Self::DomainLinkedToWrongHost => write!(f, "DOMAIN_LINKED_TO_WRONG_HOST"),
            Self::GenericFailure => write!(f, "GENERIC_FAILURE"),
        }
    }
}

impl Default for CheckedCustomDomainStatus {
    fn default() -> CheckedCustomDomainStatus {
        Self::ResolvesToIp
    }
}

