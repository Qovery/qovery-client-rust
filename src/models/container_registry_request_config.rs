/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ContainerRegistryRequestConfig : This field is dependent of the container registry kind: * `ECR` needs in the config: region, access_key_id, secret_access_key * `SCALEWAY_CR` needs in the config: region, scaleway_access_key, scaleway_secret_key * `GCP_ARTIFACT_REGISTRY` needs in the config: region, json_credentials * `DOCKER_HUB` needs in the config (optional): username, password * `GITHUB_CR` needs in the config (optional): username, password * `GITLAB_CR` needs in the config (optional): username, password * `PUBLIC_ECR` doesn't need credentials info * `GENERIC_CR` needs in the config (optional): username, password * `DOCR` is not supported anymore
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContainerRegistryRequestConfig {
    /// Required if kind is `ECR` or `PUBLIC_ECR`
    #[serde(rename = "access_key_id", skip_serializing_if = "Option::is_none")]
    pub access_key_id: Option<String>,
    /// Required if kind is `ECR` or `PUBLIC_ECR`
    #[serde(rename = "secret_access_key", skip_serializing_if = "Option::is_none")]
    pub secret_access_key: Option<String>,
    /// Required if kind is `ECR` or `SCALEWAY_CR`
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
    /// Required if kind is `SCALEWAY_CR`
    #[serde(
        rename = "scaleway_access_key",
        skip_serializing_if = "Option::is_none"
    )]
    pub scaleway_access_key: Option<String>,
    /// Required if kind is `SCALEWAY_CR`
    #[serde(
        rename = "scaleway_secret_key",
        skip_serializing_if = "Option::is_none"
    )]
    pub scaleway_secret_key: Option<String>,
    /// Required if kind is `SCALEWAY_CR`
    #[serde(
        rename = "scaleway_project_id",
        skip_serializing_if = "Option::is_none"
    )]
    pub scaleway_project_id: Option<String>,
    /// Required if kind is `GCP_ARTIFACT_REGISTRY`
    #[serde(rename = "json_credentials", skip_serializing_if = "Option::is_none")]
    pub json_credentials: Option<String>,
    /// optional, for kind `DOCKER_HUB`   We encourage you to set credentials for Docker Hub due to the limits on the pull rate
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    /// optional, for kind `DOCKER_HUB`   We encourage you to set credentials for Docker Hub due to the limits on the pull rate
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
    /// For ECR, you can either set a static access_key or use a role arn that we are going to assume
    #[serde(rename = "role_arn", skip_serializing_if = "Option::is_none")]
    pub role_arn: Option<String>,
    /// Required if kind is `AZURE_CR`.
    #[serde(rename = "azure_tenant_id", skip_serializing_if = "Option::is_none")]
    pub azure_tenant_id: Option<String>,
    /// Required if kind is `AZURE_CR`.
    #[serde(
        rename = "azure_subscription_id",
        skip_serializing_if = "Option::is_none"
    )]
    pub azure_subscription_id: Option<String>,
}

impl ContainerRegistryRequestConfig {
    /// This field is dependent of the container registry kind: * `ECR` needs in the config: region, access_key_id, secret_access_key * `SCALEWAY_CR` needs in the config: region, scaleway_access_key, scaleway_secret_key * `GCP_ARTIFACT_REGISTRY` needs in the config: region, json_credentials * `DOCKER_HUB` needs in the config (optional): username, password * `GITHUB_CR` needs in the config (optional): username, password * `GITLAB_CR` needs in the config (optional): username, password * `PUBLIC_ECR` doesn't need credentials info * `GENERIC_CR` needs in the config (optional): username, password * `DOCR` is not supported anymore
    pub fn new() -> ContainerRegistryRequestConfig {
        ContainerRegistryRequestConfig {
            access_key_id: None,
            secret_access_key: None,
            region: None,
            scaleway_access_key: None,
            scaleway_secret_key: None,
            scaleway_project_id: None,
            json_credentials: None,
            username: None,
            password: None,
            role_arn: None,
            azure_tenant_id: None,
            azure_subscription_id: None,
        }
    }
}
