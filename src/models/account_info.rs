/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development. 
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountInfo {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<uuid::Uuid>,
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "nickname", skip_serializing_if = "Option::is_none")]
    pub nickname: Option<String>,
    #[serde(rename = "first_name", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    #[serde(rename = "last_name", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    #[serde(rename = "profile_picture_url", skip_serializing_if = "Option::is_none")]
    pub profile_picture_url: Option<String>,
    #[serde(rename = "communication_email", skip_serializing_if = "Option::is_none")]
    pub communication_email: Option<String>,
}

impl AccountInfo {
    pub fn new() -> AccountInfo {
        AccountInfo {
            id: None,
            created_at: None,
            nickname: None,
            first_name: None,
            last_name: None,
            profile_picture_url: None,
            communication_email: None,
        }
    }
}

