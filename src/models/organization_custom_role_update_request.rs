/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrganizationCustomRoleUpdateRequest {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Should contain an entry for every existing cluster
    #[serde(rename = "cluster_permissions")]
    pub cluster_permissions:
        Vec<models::OrganizationCustomRoleUpdateRequestClusterPermissionsInner>,
    /// Should contain an entry for every existing project
    #[serde(rename = "project_permissions")]
    pub project_permissions:
        Vec<models::OrganizationCustomRoleUpdateRequestProjectPermissionsInner>,
}

impl OrganizationCustomRoleUpdateRequest {
    pub fn new(
        name: String,
        cluster_permissions: Vec<
            models::OrganizationCustomRoleUpdateRequestClusterPermissionsInner,
        >,
        project_permissions: Vec<
            models::OrganizationCustomRoleUpdateRequestProjectPermissionsInner,
        >,
    ) -> OrganizationCustomRoleUpdateRequest {
        OrganizationCustomRoleUpdateRequest {
            name,
            description: None,
            cluster_permissions,
            project_permissions,
        }
    }
}
