/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.4
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnvironmentDeploymentRuleEditRequest {
    #[serde(rename = "on_demand_preview", skip_serializing_if = "Option::is_none")]
    pub on_demand_preview: Option<bool>,
    #[serde(rename = "auto_preview", skip_serializing_if = "Option::is_none")]
    pub auto_preview: Option<bool>,
    #[serde(rename = "auto_stop", skip_serializing_if = "Option::is_none")]
    pub auto_stop: Option<bool>,
    #[serde(rename = "timezone")]
    pub timezone: String,
    #[serde(rename = "start_time")]
    pub start_time: String,
    #[serde(rename = "stop_time")]
    pub stop_time: String,
    #[serde(rename = "weekdays")]
    pub weekdays: Vec<models::WeekdayEnum>,
}

impl EnvironmentDeploymentRuleEditRequest {
    pub fn new(
        timezone: String,
        start_time: String,
        stop_time: String,
        weekdays: Vec<models::WeekdayEnum>,
    ) -> EnvironmentDeploymentRuleEditRequest {
        EnvironmentDeploymentRuleEditRequest {
            on_demand_preview: None,
            auto_preview: None,
            auto_stop: None,
            timezone,
            start_time,
            stop_time,
            weekdays,
        }
    }
}
