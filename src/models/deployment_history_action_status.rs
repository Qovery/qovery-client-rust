/*
 * Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support+api+documentation@qovery.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DeploymentHistoryActionStatus {
    #[serde(rename = "QUEUED")]
    Queued,
    #[serde(rename = "ONGOING")]
    Ongoing,
    #[serde(rename = "SUCCESS")]
    Success,
    #[serde(rename = "ERROR")]
    Error,
    #[serde(rename = "CANCELED")]
    Canceled,
    #[serde(rename = "CANCELING")]
    Canceling,
    #[serde(rename = "NEVER")]
    Never,
}

impl std::fmt::Display for DeploymentHistoryActionStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Queued => write!(f, "QUEUED"),
            Self::Ongoing => write!(f, "ONGOING"),
            Self::Success => write!(f, "SUCCESS"),
            Self::Error => write!(f, "ERROR"),
            Self::Canceled => write!(f, "CANCELED"),
            Self::Canceling => write!(f, "CANCELING"),
            Self::Never => write!(f, "NEVER"),
        }
    }
}

impl Default for DeploymentHistoryActionStatus {
    fn default() -> DeploymentHistoryActionStatus {
        Self::Queued
    }
}
